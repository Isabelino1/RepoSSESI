// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiSSESI.Models;

namespace WebApiSSESI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190107012651_Monitoreo")]
    partial class Monitoreo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApiSSESI.Models.Alumno", b =>
                {
                    b.Property<long>("Cedula")
                        .HasMaxLength(9);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Barrio")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("ClaseId");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("Edad");

                    b.Property<string>("Emergencia")
                        .HasMaxLength(100);

                    b.Property<bool>("EstaBorrado");

                    b.Property<DateTime>("FechaNacimiento");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("TelEmergencia")
                        .HasMaxLength(20);

                    b.Property<string>("Telefono")
                        .HasMaxLength(20);

                    b.HasKey("Cedula");

                    b.HasIndex("ClaseId");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("WebApiSSESI.Models.CentroEducativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barrio")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("EstaBorrado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("CentrosEducativos");
                });

            modelBuilder.Entity("WebApiSSESI.Models.Clase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CentroId");

                    b.Property<bool>("EstaBorrado");

                    b.Property<string>("Grado")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("CentroId");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("WebApiSSESI.Models.ClaseDelAlumno", b =>
                {
                    b.Property<int>("ClaseId");

                    b.Property<long>("AlumnoCedula");

                    b.HasKey("ClaseId", "AlumnoCedula");

                    b.HasAlternateKey("AlumnoCedula", "ClaseId");

                    b.ToTable("ClaseDelAlumno");
                });

            modelBuilder.Entity("WebApiSSESI.Models.ClaseTieneMateria", b =>
                {
                    b.Property<int>("ClaseId");

                    b.Property<int>("MateriaId");

                    b.HasKey("ClaseId", "MateriaId");

                    b.HasIndex("MateriaId");

                    b.ToTable("ClaseTieneMaterias");
                });

            modelBuilder.Entity("WebApiSSESI.Models.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CargaHoraria")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("CentroId");

                    b.Property<bool>("EstaBorrado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CentroId");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("WebApiSSESI.Models.Monitoreo", b =>
                {
                    b.Property<string>("NumeroContrato");

                    b.Property<long>("AlumnoCedula");

                    b.Property<DateTime>("FechaFin");

                    b.Property<DateTime>("FechaHoraUbicacion");

                    b.Property<DateTime>("FechaInicio");

                    b.Property<double>("Latitud");

                    b.Property<double>("Longitud");

                    b.HasKey("NumeroContrato");

                    b.HasIndex("AlumnoCedula");

                    b.ToTable("Monitoreos");
                });

            modelBuilder.Entity("WebApiSSESI.Models.Padre", b =>
                {
                    b.Property<long>("Cedula")
                        .HasMaxLength(9);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("Edad");

                    b.Property<bool>("EstaBorrado");

                    b.Property<bool>("Monitoreo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Telefono")
                        .HasMaxLength(20);

                    b.Property<string>("Trabajo")
                        .HasMaxLength(100);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Cedula");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Padres");
                });

            modelBuilder.Entity("WebApiSSESI.Models.PadreObservaMonitoreo", b =>
                {
                    b.Property<long>("PadreCedula");

                    b.Property<string>("MonitoreoNumeroContrato");

                    b.HasKey("PadreCedula", "MonitoreoNumeroContrato");

                    b.HasIndex("MonitoreoNumeroContrato");

                    b.ToTable("PadreObservaMonitoreos");
                });

            modelBuilder.Entity("WebApiSSESI.Models.PadreTieneHijo", b =>
                {
                    b.Property<long>("AlumnoCedula");

                    b.Property<long>("PadreCedula");

                    b.HasKey("AlumnoCedula", "PadreCedula");

                    b.HasIndex("PadreCedula");

                    b.ToTable("PadreTieneHijos");
                });

            modelBuilder.Entity("WebApiSSESI.Models.TelefonoCEducativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CentroId");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CentroId");

                    b.ToTable("TelefonoCEducativo");
                });

            modelBuilder.Entity("WebApiSSESI.Models.Alumno", b =>
                {
                    b.HasOne("WebApiSSESI.Models.Clase", "Clase")
                        .WithMany("Alumnos")
                        .HasForeignKey("ClaseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApiSSESI.Models.Clase", b =>
                {
                    b.HasOne("WebApiSSESI.Models.CentroEducativo", "CentroEducativo")
                        .WithMany("Clases")
                        .HasForeignKey("CentroId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApiSSESI.Models.ClaseDelAlumno", b =>
                {
                    b.HasOne("WebApiSSESI.Models.Alumno", "Alumno")
                        .WithMany()
                        .HasForeignKey("AlumnoCedula")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApiSSESI.Models.Clase", "Clase")
                        .WithMany()
                        .HasForeignKey("ClaseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApiSSESI.Models.ClaseTieneMateria", b =>
                {
                    b.HasOne("WebApiSSESI.Models.Clase", "Clase")
                        .WithMany("ClaseTieneMaterias")
                        .HasForeignKey("ClaseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApiSSESI.Models.Materia", "Materia")
                        .WithMany("ClaseTieneMaterias")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApiSSESI.Models.Materia", b =>
                {
                    b.HasOne("WebApiSSESI.Models.CentroEducativo", "CentroEducativo")
                        .WithMany("Materias")
                        .HasForeignKey("CentroId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApiSSESI.Models.Monitoreo", b =>
                {
                    b.HasOne("WebApiSSESI.Models.Alumno", "Alumno")
                        .WithMany()
                        .HasForeignKey("AlumnoCedula")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApiSSESI.Models.PadreObservaMonitoreo", b =>
                {
                    b.HasOne("WebApiSSESI.Models.Monitoreo", "Monitoreo")
                        .WithMany("PadreObservaMonitoreos")
                        .HasForeignKey("MonitoreoNumeroContrato")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApiSSESI.Models.Padre", "Padre")
                        .WithMany("PadreObservaMonitoreos")
                        .HasForeignKey("PadreCedula")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApiSSESI.Models.PadreTieneHijo", b =>
                {
                    b.HasOne("WebApiSSESI.Models.Alumno", "Alumno")
                        .WithMany("PadreTieneHijos")
                        .HasForeignKey("AlumnoCedula")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApiSSESI.Models.Padre", "Padre")
                        .WithMany("PadreTieneHijos")
                        .HasForeignKey("PadreCedula")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApiSSESI.Models.TelefonoCEducativo", b =>
                {
                    b.HasOne("WebApiSSESI.Models.CentroEducativo", "CentroEducativo")
                        .WithMany("Telefonos")
                        .HasForeignKey("CentroId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
